# Widow example demonstrating structs and implementation blocks

# Define a struct for a Person
struct Person:
    name:string
    age:i32

# Implementation block for Person
impl Person:
    # Constructor method
    func new(name, age) -> Person:
        ret Person{
            name: name,
            age: age
        }
    
    # Method with a receiver
    func greet(self):
        print("Hello, my name is " + self.name)
    
    # Method that modifies self
    func have_birthday(self):
        self.age += 1
        print("Happy birthday! " + self.name + " is now " + string(self.age))

# Define a struct that uses composition
struct Employee:
    person:Person
    role:string
    salary:f64

# Implementation block for Employee
impl Employee:
    func new(name, age, role, salary) -> Employee:
        ret Employee{
            person: Person.new(name, age),
            role: role,
            salary: salary
        }
    
    func describe(self):
        self.person.greet()
        print("I work as a " + self.role + " and earn " + string(self.salary))
    
    func promote(self, new_role, raise):
        self.role = new_role
        self.salary += raise
        print(self.person.name + " has been promoted to " + new_role)

# Main function
func main():
    # Create a person instance
    alice = Person.new("Alice", 30)
    alice.greet()
    alice.have_birthday()
    
    # Create an employee instance
    bob = Employee.new("Bob", 25, "Developer", 75000.0)
    bob.describe()
    
    # Promote the employee
    bob.promote("Senior Developer", 15000.0)
    bob.describe()